"use client";

import React, { useState } from "react";
import axios from "axios";

import { MdEmail } from "react-icons/md";
import { FaLock } from "react-icons/fa";
import Swal from "sweetalert2";
import InputLogin from "../Login/InputLogin";
import BtnLogin from "../Login/BtnLogin";

const PartInput = () => {
  const [email, setEmail] = useState(""); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ email
  const [password, setPassword] = useState(""); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ password
  const [loading, setLoading] = useState(false); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏° loading

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true); // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î API

    try {
      const payload = { email, password };
      console.log("üìå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á API:", payload);

      const response = await axios.post(`${process.env.NEXT_PUBLIC_BASE_URL}/login`, payload);

      console.log("‚úÖ Login Success:", response.data);
      
      // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      Swal.fire({
        icon: "success",
        title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
        text: "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß",
        confirmButtonColor: "#4CAF50",
      });

    } catch (error) {
      console.error("‚ùå Login Error:", error);

      // ‚ùå ‡πÅ‡∏™‡∏î‡∏á SweetAlert2 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
      Swal.fire({
        icon: "error",
        title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
        text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Email ‡πÅ‡∏•‡∏∞ Password",
        confirmButtonColor: "#E53935",
      });

    } finally {
      setLoading(false); // ‚úÖ ‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏´‡∏•‡∏î API
    }
  };

  return (
    <div className="w-full text-center">
      <form onSubmit={handleSubmit} className="login-form w-full max-w-sm mx-auto p-8 bg-white">
        <InputLogin 
          name="email" 
          placeholder="Email" 
          type="text" 
          icon={<MdEmail />} 
          value={email} // ‚úÖ ‡∏ú‡∏π‡∏Å state ‡∏Å‡∏±‡∏ö input
          onChange={(e) => setEmail(e.target.value)} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï email
        />
        <InputLogin 
          name="password" 
          placeholder="Password" 
          type="password" 
          icon={<FaLock />} 
          value={password} // ‚úÖ ‡∏ú‡∏π‡∏Å state ‡∏Å‡∏±‡∏ö input
          onChange={(e) => setPassword(e.target.value)} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï password
        />
        <BtnLogin name={loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö..." : "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"} disabled={loading} />
      </form>
    </div>
  );
};

export default PartInput;
