import React, { useEffect, useState } from "react";
import { DatePicker } from "antd";
import dayjs from "dayjs";

interface ICalendarProps {
  name: string;
  format?: string;
  placeholder: string;
  disable?: boolean;
  width?: number | string;
  height?: number | string;
  value?: string | null;
  onChange?: (name: string, value: string) => void;
}

const Calendar: React.FC<ICalendarProps> = ({
  name,
  format = "YYYY-MM-DD",
  placeholder,
  width,
  height,
  onChange,
  disable,
  value
}) => {
  // ‚úÖ ‡πÉ‡∏ä‡πâ state ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤
  const [selectedDate, setSelectedDate] = useState<dayjs.Dayjs | null>(
    value ? dayjs(value) : null
  );

  // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÄ‡∏°‡∏∑‡πà‡∏≠ `value` ‡∏à‡∏≤‡∏Å `props` ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    setSelectedDate(value ? dayjs(value) : null);
  }, [value]);

  return (
    <DatePicker
      disabled={disable}
      format={format}
      placeholder={placeholder}
      style={{ width, height }}
      value={selectedDate} // ‚úÖ ‡πÉ‡∏ä‡πâ state ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤ value
      onChange={(date, dateString) => {
        setSelectedDate(date); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state

        // üî• ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö `dateString` ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ (‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô `string` ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
        if (typeof dateString === "string" && onChange) {
          onChange(name, dateString);
        }
      }}
    />
  );
};

export default Calendar;
